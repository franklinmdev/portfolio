---
import type { Language } from "@/i18n/utils"
import { getLangFromUrl, languages, useTranslations } from "@/i18n/utils"
import Layout from "@/layouts/Layout.astro"
import { getCollection, render } from "astro:content"

// Generate static paths for all locale + project combinations
export async function getStaticPaths() {
  const allProjects = await getCollection("projects")
  const paths = []

  // Generate paths for each project based on its ID structure
  for (const project of allProjects) {
    // Extract language and slug from the project ID
    // ID format: "en/devflow" or "es/devflow"
    const [lang, ...slugParts] = project.id.split("/")
    const slug = slugParts.join("/") // In case there are nested paths

    // Only generate paths for supported languages and valid lang values
    if (lang && lang in languages) {
      paths.push({
        params: {
          locale: lang,
          slug: slug,
        },
        props: { project },
      })
    }
  }

  return paths
}

const { project } = Astro.props
const { Content } = await render(project)

// Get current language and translation function
const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

// Helper function to format date with locale
const formatDate = (date: Date, locale: Language) => {
  const localeMap: Record<Language, string> = {
    en: "en-US",
    es: "es-ES",
  }

  return new Intl.DateTimeFormat(localeMap[locale], {
    year: "numeric",
    month: "long",
    day: "numeric",
    timeZone: "UTC", // Ensure consistent date display regardless of timezone
  }).format(date)
}

// Generate localized URLs for navigation
const baseUrl = lang === "en" ? "/" : `/${lang}/`
const projectsUrl = baseUrl + "#projects"
const contactUrl = baseUrl + "#contact"
---

<Layout title={`${project.data.title} - Franklin Martinez`}>
  <main
    class="mx-auto min-h-screen w-full max-w-7xl px-4 sm:px-6 lg:px-8 xl:px-12"
  >
    <div class="pt-24 pb-16">
      <!-- Back Button -->
      <a
        href={projectsUrl}
        class="group mb-8 inline-flex items-center gap-2 text-zinc-400 transition-colors hover:text-white"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-5 w-5 transition-transform group-hover:-translate-x-1"
          viewBox="0 0 20 20"
          fill="currentColor"
        >
          <path
            fill-rule="evenodd"
            d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z"
            clip-rule="evenodd"
          >
          </path>
        </svg>
        {t("projects.back_to_projects") || "Back to Projects"}
      </a>

      <!-- Project Header -->
      <header class="mb-12">
        <div class="mb-6 flex items-start gap-6">
          <!-- Project Icon -->
          <div class="icon-container">
            <Fragment set:html={project.data.icon} />
          </div>

          <div class="flex-1">
            <h1
              class="mb-3 text-4xl font-bold tracking-tight text-zinc-100 md:text-5xl"
            >
              {project.data.title}
            </h1>
            <p class="mb-4 text-xl text-zinc-400">
              {project.data.subtitle}
            </p>
            <p class="text-sm text-zinc-500">
              {t("projects.published_on") || "Published on"}
              {formatDate(project.data.publishDate, lang)}
            </p>
          </div>
        </div>
      </header>

      <!-- Project Image -->
      <div class="mb-12 overflow-hidden rounded-lg border border-zinc-700">
        <img
          src={project.data.image.url}
          alt={project.data.image.alt}
          class="h-auto w-full"
          loading="lazy"
        />
      </div>

      <!-- Content Grid -->
      <div class="grid grid-cols-1 gap-12 lg:grid-cols-3">
        <!-- Main Content -->
        <div class="space-y-8 lg:col-span-2">
          <!-- Description -->
          <section>
            <h2 class="mb-4 text-2xl font-bold text-zinc-100">
              {t("projects.overview") || "Overview"}
            </h2>
            <div class="space-y-4 leading-relaxed text-zinc-300">
              {
                Array.isArray(project.data.description) ? (
                  project.data.description.map((paragraph) => (
                    <p>{paragraph}</p>
                  ))
                ) : (
                  <p>{project.data.description}</p>
                )
              }
            </div>
          </section>

          <!-- Project Content (Markdown) -->
          <section>
            <div class="prose-invert prose prose-zinc max-w-none">
              <Content />
            </div>
          </section>

          <!-- Challenges & Learnings -->
          <section class="space-y-6">
            <div>
              <h2 class="mb-4 text-2xl font-bold text-zinc-100">
                {t("projects.challenges") || "Challenges"}
              </h2>
              <p class="leading-relaxed text-zinc-300">
                {project.data.challenges}
              </p>
            </div>

            <div>
              <h2 class="mb-4 text-2xl font-bold text-zinc-100">
                {t("projects.key_learnings") || "Key Learnings"}
              </h2>
              <p class="leading-relaxed text-zinc-300">
                {project.data.learnings}
              </p>
            </div>
          </section>
        </div>

        <!-- Sidebar -->
        <div class="lg:col-span-1">
          <div class="sticky top-24 space-y-8">
            <!-- Tech Stack -->
            <div class="rounded-lg border border-zinc-700 bg-zinc-900 p-6">
              <h3 class="mb-4 text-lg font-bold text-zinc-100">
                {t("projects.tech_stack") || "Tech Stack"}
              </h3>
              <div class="flex flex-wrap gap-2">
                {
                  project.data.tags.map((tag) => (
                    <span class="tech-tag text-xs">{tag}</span>
                  ))
                }
              </div>
            </div>

            <!-- Project Links -->
            <div class="rounded-lg border border-zinc-700 bg-zinc-900 p-6">
              <h3 class="mb-4 text-lg font-bold text-zinc-100">
                {t("projects.links") || "Links"}
              </h3>
              <div class="space-y-3">
                <a
                  href={project.data.liveUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="block w-full rounded-md bg-violet-600 px-4 py-2 text-center text-sm font-semibold text-white transition-colors hover:bg-violet-700"
                >
                  {t("projects.view_live") || "View Live Project"}
                </a>
                <a
                  href={project.data.githubUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="block w-full rounded-md bg-zinc-800 px-4 py-2 text-center text-sm font-semibold text-white transition-colors hover:bg-zinc-700"
                >
                  {t("projects.view_source") || "View Source Code"}
                </a>
              </div>
            </div>

            <!-- Featured Badge -->
            {
              project.data.featured && (
                <div class="rounded-lg bg-gradient-to-r from-violet-600 to-purple-600 p-6 text-center">
                  <div class="mb-2 font-semibold text-white">
                    âœ¨ {t("projects.featured_project") || "Featured Project"}
                  </div>
                  <p class="text-sm text-violet-100">
                    {t("projects.featured_description") ||
                      "This project showcases advanced development skills and best practices."}
                  </p>
                </div>
              )
            }
          </div>
        </div>
      </div>

      <!-- Navigation -->
      <nav class="mt-16 border-t border-zinc-700 pt-8">
        <div class="flex flex-col gap-4 sm:flex-row sm:justify-between">
          <a
            href={projectsUrl}
            class="inline-flex items-center justify-center gap-2 rounded-md bg-zinc-800 px-4 py-2 text-sm font-semibold text-white transition-colors hover:bg-zinc-700"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-4 w-4"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z"
                clip-rule="evenodd"
              >
              </path>
            </svg>
            {t("projects.view_all_btn")}
          </a>

          <a
            href={contactUrl}
            class="inline-flex items-center justify-center gap-2 rounded-md bg-violet-600 px-4 py-2 text-sm font-semibold text-white transition-colors hover:bg-violet-700"
          >
            {t("projects.work_together") || "Let's Work Together"}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="h-4 w-4"
              viewBox="0 0 20 20"
              fill="currentColor"
            >
              <path
                fill-rule="evenodd"
                d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
                clip-rule="evenodd"
              >
              </path>
            </svg>
          </a>
        </div>
      </nav>
    </div>
  </main>
</Layout>

<style>
  /* Custom prose styles for markdown content */
  .prose h2 {
    margin-top: 2rem;
    margin-bottom: 1rem;
    font-size: 1.5rem;
    font-weight: 700;
    color: #f4f4f5;
  }

  .prose h3 {
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
    font-size: 1.25rem;
    font-weight: 600;
    color: #e4e4e7;
  }

  .prose p {
    margin-bottom: 1rem;
    line-height: 1.625;
    color: #d4d4d8;
  }

  .prose ul,
  .prose ol {
    margin-bottom: 1rem;
    color: #d4d4d8;
  }

  .prose li {
    line-height: 1.625;
    margin-bottom: 0.5rem;
  }

  .prose strong {
    font-weight: 600;
    color: #f4f4f5;
  }

  .prose code {
    border-radius: 0.25rem;
    background-color: #27272a;
    padding: 0.125rem 0.375rem;
    font-size: 0.875rem;
    color: #c4b5fd;
  }

  .prose pre {
    overflow-x: auto;
    border-radius: 0.5rem;
    border: 1px solid #3f3f46;
    background-color: #18181b;
    padding: 1rem;
  }

  .prose blockquote {
    border-left: 4px solid #8b5cf6;
    padding-left: 1rem;
    color: #c4c4cc;
    font-style: italic;
  }
</style>
